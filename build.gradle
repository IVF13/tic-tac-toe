plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '3.1.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'com.github.stefanbirkner:system-lambda:1.2.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testlogger {
        theme 'mocha'
        showExceptions true
        showStackTraces true
        showFullStackTraces false
        showCauses true
        slowThreshold 2000
        showSummary true
        showSimpleNames false
        showPassed true
        showSkipped true
        showFailed true
        showStandardStreams false
        showPassedStandardStreams true
        showSkippedStandardStreams true
        showFailedStandardStreams true
        logLevel 'lifecycle'
    }
}

jacocoTestReport {
    dependsOn test
}

jacoco {
    toolVersion = "0.8.7"
    //reportsDirectory = layout.buildDirectory.dir('~/JacocoReportDir')
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}